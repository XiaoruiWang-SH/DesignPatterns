@startuml
abstract class GUIFactory {
+ {static} GUIFactory factory(OSType)
+ {abstract} GUIButton newButton()
}

class OSXButton {
+ void click()
}

class OSXFactory {
+ GUIButton newButton()
}

class WindowsFactory {
+ GUIButton newButton()
}

enum OSType {
+  Windows
+  OSX
}

abstract class GUIButton {
+ {abstract}void click()
}

class WindowsButton {
+ void click()
}




GUIFactory <|-- WindowsFactory
GUIFactory <|-- OSXFactory

GUIFactory ..> OSType : <<use>>
GUIFactory ..> WindowsFactory : <<use>>
GUIFactory ..> OSXFactory : <<use>>
GUIFactory ..> GUIButton : <<use>>

GUIButton <|-- WindowsButton
GUIButton <|-- OSXButton

WindowsFactory ..> WindowsButton : <<use>>
OSXFactory ..> OSXButton : <<use>>


@enduml